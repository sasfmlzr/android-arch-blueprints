import java.util.regex.Matcher
import java.util.regex.Pattern

project.ext.generateBuildNumber = {
    if (isProdReleaseBuild()) {
        // Don't add build number to PROD releases
        return ""
    }
    String buildNumberStr = System.getenv("BUILD_NUMBER") ?: "dev"
    return ".${buildNumberStr}"
}

project.ext.generateVersionCode = {
    int reservedSuffix = 0 // can be used for dub-version of the same APK version (e.g version for different devices or DPIs)
    return "${rootProject.properties['appVersionCode.release']}${rootProject.properties['appVersionPatch']}${reservedSuffix}".toInteger()
}

project.ext.generateVersionName = {
    return "${rootProject.properties['appVersionName.major']}.${rootProject.properties['appVersionName.minor']}.${rootProject.properties['appVersionPatch']}${generateBuildNumber()}"
}


def isProdReleaseBuild() {
    String runningTask = getGradle().getStartParameter().getTaskRequests().toString()
    Pattern prodReleasePattern = Pattern.compile(".*Release")
    Matcher matcher = prodReleasePattern.matcher(runningTask)
    return matcher.find()
}